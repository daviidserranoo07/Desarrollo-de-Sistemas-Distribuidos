/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALC_H_RPCGEN
#define _CALC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX 100

typedef double EXTENDED_DOUBLE;


struct double_vector {
	int size;
	double values[MAX];
};
typedef struct double_vector double_vector;

struct calc_res {
	int errnum;
	union {
		double result;
	} calc_res_u;
};
typedef struct calc_res calc_res;

#define CALPROG 0x20000157
#define CAL_VER 1

#if defined(__STDC__) || defined(__cplusplus)
#define ADD 1
extern  calc_res * add_1(double_vector , CLIENT *);
extern  calc_res * add_1_svc(double_vector , struct svc_req *);
#define SUBSTRACT 2
extern  calc_res * substract_1(double_vector , CLIENT *);
extern  calc_res * substract_1_svc(double_vector , struct svc_req *);
#define MULTIPLY 3
extern  calc_res * multiply_1(double_vector , CLIENT *);
extern  calc_res * multiply_1_svc(double_vector , struct svc_req *);
#define DIVIDE 4
extern  calc_res * divide_1(double_vector , CLIENT *);
extern  calc_res * divide_1_svc(double_vector , struct svc_req *);
extern int calprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define ADD 1
extern  calc_res * add_1();
extern  calc_res * add_1_svc();
#define SUBSTRACT 2
extern  calc_res * substract_1();
extern  calc_res * substract_1_svc();
#define MULTIPLY 3
extern  calc_res * multiply_1();
extern  calc_res * multiply_1_svc();
#define DIVIDE 4
extern  calc_res * divide_1();
extern  calc_res * divide_1_svc();
extern int calprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_EXTENDED_DOUBLE (XDR *, EXTENDED_DOUBLE*);
extern  bool_t xdr_double_vector (XDR *, double_vector*);
extern  bool_t xdr_double_vector (XDR *, double_vector*);
extern  bool_t xdr_calc_res (XDR *, calc_res*);

#else /* K&R C */
extern bool_t xdr_EXTENDED_DOUBLE ();
extern bool_t xdr_double_vector ();
extern bool_t xdr_double_vector ();
extern bool_t xdr_calc_res ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALC_H_RPCGEN */
